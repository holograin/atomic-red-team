attack_technique: T1119
display_name: Automated Collection
atomic_tests:
- name: Automated Collection Command Prompt
  auto_generated_guid: cb379146-53f1-43e0-b884-7ce2c635ff5b
  description: |
    Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_command_prompt_collection
    to see what was collected.
  supported_platforms:
  - windows
  executor:
    command: |
      mkdir %temp%\T1119_command_prompt_collection >nul 2>&1
      dir c: /b /s .docx | findstr /e .docx
      for /R c:\ %f in (*.docx) do copy /Y %f %temp%\T1119_command_prompt_collection
    cleanup_command: |
      del %temp%\T1119_command_prompt_collection /F /Q >nul 2>&1
    name: command_prompt
- name: Automated Collection PowerShell
  auto_generated_guid: 634bd9b9-dc83-4229-b19f-7f83ba9ad313
  description: |
    Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_powershell_collection
    to see what was collected.
  supported_platforms:
  - windows
  executor:
    command: |
      New-Item -Path $env:TEMP\T1119_powershell_collection -ItemType Directory -Force | Out-Null
      Get-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination $env:TEMP\T1119_powershell_collection}
    cleanup_command: |
      Remove-Item $env:TEMP\T1119_powershell_collection -Force -ErrorAction Ignore | Out-Null
    name: powershell
- name: Recon information for export with PowerShell
  auto_generated_guid: c3f6d794-50dd-482f-b640-0384fbb7db26
  description: |
    collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt
    to see what was collected.
  supported_platforms:
  - windows
  executor:
    command: |
      Get-Service > $env:TEMP\T1119_1.txt
      Get-ChildItem Env: > $env:TEMP\T1119_2.txt
      Get-Process > $env:TEMP\T1119_3.txt
    cleanup_command: |
      Remove-Item $env:TEMP\T1119_1.txt -ErrorAction Ignore
      Remove-Item $env:TEMP\T1119_2.txt -ErrorAction Ignore
      Remove-Item $env:TEMP\T1119_3.txt -ErrorAction Ignore
    name: powershell
- name: Recon information for export with Command Prompt
  auto_generated_guid: aa1180e2-f329-4e1e-8625-2472ec0bfaf3
  description: |
    collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt
    to see what was collected.
  supported_platforms:
  - windows
  executor:
    command: |
      sc query type=service > %TEMP%\T1119_1.txt
      doskey /history > %TEMP%\T1119_2.txt
      wmic process list > %TEMP%\T1119_3.txt
      tree C:\AtomicRedTeam\atomics > %TEMP%\T1119_4.txt
    cleanup_command: |
      del %TEMP%\T1119_1.txt >nul 2>&1
      del %TEMP%\T1119_2.txt >nul 2>&1
      del %TEMP%\T1119_3.txt >nul 2>&1
      del %TEMP%\T1119_4.txt >nul 2>&1
    name: command_prompt
- name: Execute Command via Cron Job with find and -exec
  auto_generated_guid: e4f5g6h7-i8j9-k0l1-m2n3-o4p5q6r7s8t9
  description: |
    Adds a cron job that uses `find` with `-exec` to execute a command, simulating the scheduling of tasks for persistence or execution. The job is executed by cron, mimicking an adversary's use of scheduled tasks for malicious purposes.
  supported_platforms:
    - linux
  dependencies:
    - description: |
        Requires cron or a similar scheduler to be present and running on the system.
      prereq_command: |
        pgrep cron || pgrep crond || pgrep anacron
      get_prereq_command: |
        echo "Ensure cron, crond, or anacron is running on the system."
  dependency_executor_name: bash
  executor:
    name: bash
    elevation_required: false
    command: |
      # Create a script to be executed by cron
      SCRIPT_PATH="/tmp/test_cron_find_exec.sh"
      echo "touch /tmp/test_file.txt && echo 'Cron test file' > /tmp/test_file.txt && find /tmp -type f -name 'test_file.txt' -exec cp {} {}.cronbak \;" > $SCRIPT_PATH
      chmod +x $SCRIPT_PATH

      # Add a cron job to execute the script within the next minute
      CRON_JOB="* * * * * $SCRIPT_PATH"
      (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -

      # Note: The script will run within the next 1-2 minutes. Adjust as needed for testing purposes.
      echo "Cron job added. Waiting for execution..."

      # Wait a couple of minutes to allow cron job to execute
      sleep 120

      # Display content of the copied file if exists
      if [ -f /tmp/test_file.txt.cronbak ]; then
        echo "Cron job executed successfully. Copied file exists."
      else
        echo "Cron job may not have executed as expected."
      fi
  cleanup_command: |
      # Remove the temporary cron job and cleanup files
      crontab -l | grep -v "$SCRIPT_PATH" | crontab -
      rm -f $SCRIPT_PATH /tmp/test_file.txt /tmp/test_file.txt.cronbak
      echo "Cron job removed and temporary files cleaned up."
